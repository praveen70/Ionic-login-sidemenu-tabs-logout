(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/fire'), require('firebase/auth')) :
    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/fire', 'firebase/auth'], factory) :
    (factory((global.angularfire2 = global.angularfire2 || {}, global.angularfire2.auth = {}),global.ng.core,global.rxjs,global.rxjs.operators,global.angularfire2));
}(this, (function (exports,core,rxjs,operators,fire) { 'use strict';

    var AngularFireAuth = (function () {
        function AngularFireAuth(options, nameOrConfig, platformId, zone) {
            var _this = this;
            this.zone = zone;
            var scheduler = new fire.FirebaseZoneScheduler(zone, platformId);
            this.auth = zone.runOutsideAngular(function () {
                var app = fire._firebaseAppFactory(options, nameOrConfig);
                return app.auth();
            });
            this.authState = scheduler.keepUnstableUntilFirst(scheduler.runOutsideAngular(new rxjs.Observable(function (subscriber) {
                var unsubscribe = _this.auth.onAuthStateChanged(subscriber);
                return { unsubscribe: unsubscribe };
            })));
            this.user = scheduler.keepUnstableUntilFirst(scheduler.runOutsideAngular(new rxjs.Observable(function (subscriber) {
                var unsubscribe = _this.auth.onIdTokenChanged(subscriber);
                return { unsubscribe: unsubscribe };
            })));
            this.idToken = this.user.pipe(operators.switchMap(function (user) {
                return user ? rxjs.from(user.getIdToken()) : rxjs.of(null);
            }));
            this.idTokenResult = this.user.pipe(operators.switchMap(function (user) {
                return user ? rxjs.from(user.getIdTokenResult()) : rxjs.of(null);
            }));
        }
        AngularFireAuth.decorators = [
            { type: core.Injectable },
        ];
        AngularFireAuth.ctorParameters = function () { return [
            { type: undefined, decorators: [{ type: core.Inject, args: [fire.FirebaseOptionsToken,] }] },
            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [fire.FirebaseNameOrConfigToken,] }] },
            { type: Object, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] }] },
            { type: core.NgZone }
        ]; };
        return AngularFireAuth;
    }());

    var AngularFireAuthModule = (function () {
        function AngularFireAuthModule() {
        }
        AngularFireAuthModule.decorators = [
            { type: core.NgModule, args: [{
                        providers: [AngularFireAuth]
                    },] },
        ];
        return AngularFireAuthModule;
    }());

    exports.AngularFireAuth = AngularFireAuth;
    exports.AngularFireAuthModule = AngularFireAuthModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
