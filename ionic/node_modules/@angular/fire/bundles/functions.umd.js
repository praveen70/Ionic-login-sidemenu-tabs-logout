(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/fire'), require('firebase/functions')) :
    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/fire', 'firebase/functions'], factory) :
    (factory((global.angularfire2 = global.angularfire2 || {}, global.angularfire2.functions = {}),global.ng.core,global.rxjs,global.rxjs.operators,global.angularfire2));
}(this, (function (exports,core,rxjs,operators,fire) { 'use strict';

    var AngularFireFunctions = (function () {
        function AngularFireFunctions(options, nameOrConfig, platformId, zone) {
            this.scheduler = new fire.FirebaseZoneScheduler(zone, platformId);
            this.functions = zone.runOutsideAngular(function () {
                var app = fire._firebaseAppFactory(options, nameOrConfig);
                return app.functions();
            });
        }
        AngularFireFunctions.prototype.httpsCallable = function (name) {
            var _this = this;
            var callable = this.functions.httpsCallable(name);
            return function (data) {
                var callable$ = rxjs.from(callable(data));
                return _this.scheduler.runOutsideAngular(callable$.pipe(operators.map(function (r) { return r.data; })));
            };
        };
        AngularFireFunctions.decorators = [
            { type: core.Injectable },
        ];
        AngularFireFunctions.ctorParameters = function () { return [
            { type: undefined, decorators: [{ type: core.Inject, args: [fire.FirebaseOptionsToken,] }] },
            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [fire.FirebaseNameOrConfigToken,] }] },
            { type: Object, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] }] },
            { type: core.NgZone }
        ]; };
        return AngularFireFunctions;
    }());

    var AngularFireFunctionsModule = (function () {
        function AngularFireFunctionsModule() {
        }
        AngularFireFunctionsModule.decorators = [
            { type: core.NgModule, args: [{
                        providers: [AngularFireFunctions]
                    },] },
        ];
        return AngularFireFunctionsModule;
    }());

    exports.AngularFireFunctions = AngularFireFunctions;
    exports.AngularFireFunctionsModule = AngularFireFunctionsModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
